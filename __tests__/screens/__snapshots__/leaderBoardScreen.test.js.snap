// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing login screen renders Login Screen 1`] = `
<View
  accessibilityIgnoresInvertColors={true}
  style={
    [
      {
        "flex": 1,
        "paddingBottom": 20,
        "paddingTop": 30,
      },
      {},
    ]
  }
>
  <Image
    source={
      {
        "testUri": "../../../src/assets/images/background.jpg",
      }
    }
    style={
      [
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        {
          "height": undefined,
          "width": undefined,
        },
        undefined,
      ]
    }
  />
  <View
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "justifyContent": "center",
          },
          {
            "margin": 20,
          },
        ]
      }
    >
      <Text
        style={
          {
            "color": "white",
            "fontSize": 45.89389937671454,
            "margin": 15,
            "textAlign": "center",
          }
        }
      >
        Leader Board
      </Text>
    </View>
    <RCTScrollView
      contentContainerStyle={
        {
          "flex": 1,
        }
      }
      data={[]}
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={[]}
      viewabilityConfigCallbackPairs={[]}
    >
      <View />
    </RCTScrollView>
    <View
      style={
        {
          "flexDirection": "row",
          "justifyContent": "center",
          "padding": 20,
          "width": "100%",
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
      >
        <View
          collapsable={false}
          forwardedRef={[Function]}
          style={
            {
              "alignItems": "center",
              "backgroundColor": "rgba(136,213,66,0.8)",
              "borderRadius": 5,
              "borderWidth": 1,
              "height": 80.03999999999999,
              "justifyContent": "center",
              "margin": 20,
              "opacity": 0,
              "padding": 7.5,
              "transform": [
                {
                  "scale": 0.3,
                },
              ],
              "width": 525,
            }
          }
        >
          <Text
            style={
              {
                "fontSize": 30.595932917809698,
                "fontWeight": "bold",
              }
            }
          >
            BACK
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;
