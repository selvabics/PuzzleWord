// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing login screen renders Login Screen 1`] = `
<View
  accessibilityIgnoresInvertColors={true}
  style={
    [
      {
        "flex": 1,
        "paddingBottom": 20,
        "paddingTop": 30,
      },
      {},
    ]
  }
>
  <Image
    source={
      {
        "testUri": "../../../src/assets/images/background.jpg",
      }
    }
    style={
      [
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        {
          "height": undefined,
          "width": undefined,
        },
        undefined,
      ]
    }
  />
  <View
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      collapsable={false}
      forwardedRef={[Function]}
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "opacity": 0,
          "padding": 20,
          "transform": [
            {
              "translateY": -800,
            },
          ],
          "width": "100%",
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "justifyContent": "center",
          }
        }
      >
        <Text
          style={
            [
              {
                "fontSize": 22.94694968835727,
              },
              {
                "color": "white",
                "textAlign": "center",
              },
            ]
          }
        >
          Level
        </Text>
        <Text
          style={
            [
              {
                "fontSize": 45.89389937671454,
              },
              {
                "color": "white",
                "fontWeight": "bold",
                "textAlign": "center",
              },
            ]
          }
        >
          1
        </Text>
      </View>
      <Text
        style={
          {
            "color": "white",
            "fontSize": 45.89389937671454,
            "margin": 15,
            "textAlign": "center",
          }
        }
      />
      <View
        style={
          {
            "alignItems": "center",
            "justifyContent": "center",
          }
        }
      >
        <Text
          style={
            [
              {
                "fontSize": 22.94694968835727,
              },
              {
                "color": "white",
                "textAlign": "center",
              },
            ]
          }
        >
          Scores
        </Text>
        <Text
          style={
            [
              {
                "fontSize": 45.89389937671454,
              },
              {
                "color": "white",
                "fontWeight": "bold",
                "textAlign": "center",
              },
            ]
          }
        >
          0
        </Text>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <View
        collapsable={false}
        forwardedRef={[Function]}
        style={
          {
            "alignItems": "center",
            "alignSelf": "center",
            "backgroundColor": "rgba(136,213,66,0.8)",
            "borderRadius": 5,
            "borderWidth": 1,
            "height": 80.03999999999999,
            "justifyContent": "center",
            "margin": 20,
            "opacity": 0,
            "padding": 7.5,
            "transform": [
              {
                "scale": 0.3,
              },
            ],
            "width": 225,
          }
        }
      >
        <Text
          style={
            {
              "fontSize": 30.595932917809698,
              "fontWeight": "bold",
            }
          }
        >
          RESET
        </Text>
      </View>
    </View>
    <View
      style={
        [
          {
            "flex": 1,
          },
          {
            "alignItems": "center",
            "justifyContent": "center",
          },
        ]
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
      >
        <RCTScrollView
          contentContainerStyle={
            {
              "alignItems": "center",
              "justifyContent": "center",
            }
          }
          data={[]}
          getItem={[Function]}
          getItemCount={[Function]}
          keyExtractor={[Function]}
          onContentSizeChange={[Function]}
          onLayout={[Function]}
          onMomentumScrollBegin={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEnabled={false}
          scrollEventThrottle={50}
          stickyHeaderIndices={[]}
          style={
            {
              "flexGrow": 0,
              "flexWrap": "wrap",
            }
          }
          viewabilityConfigCallbackPairs={[]}
        >
          <View />
        </RCTScrollView>
      </View>
      <View
        collapsable={false}
        forwardedRef={[Function]}
        style={
          {
            "opacity": 0,
            "transform": [
              {
                "scale": 0.3,
              },
            ],
          }
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "margin": 30,
              "opacity": 1,
            }
          }
        >
          <Text
            style={
              {
                "color": "white",
                "fontSize": 38.244916147262124,
                "fontWeight": "bold",
                "marginHorizontal": 20,
                "textAlign": "center",
              }
            }
          />
        </View>
      </View>
      <RCTScrollView
        contentContainerStyle={
          {
            "alignItems": "center",
            "justifyContent": "center",
          }
        }
        data={[]}
        getItem={[Function]}
        getItemCount={[Function]}
        keyExtractor={[Function]}
        onContentSizeChange={[Function]}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEnabled={false}
        scrollEventThrottle={50}
        stickyHeaderIndices={[]}
        style={
          {
            "flexGrow": 0,
            "flexWrap": "wrap",
          }
        }
        viewabilityConfigCallbackPairs={[]}
      >
        <View />
      </RCTScrollView>
    </View>
    <Text
      style={
        {
          "color": "rgb(111,240,205)",
          "fontSize": 38.244916147262124,
          "fontWeight": "bold",
          "margin": 20,
          "textAlign": "center",
        }
      }
    >
      .
    </Text>
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "padding": 20,
          "width": "100%",
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
      >
        <View
          collapsable={false}
          forwardedRef={[Function]}
          style={
            {
              "alignItems": "center",
              "backgroundColor": "rgba(136,213,66,0.8)",
              "borderRadius": 5,
              "borderWidth": 1,
              "height": 80.03999999999999,
              "justifyContent": "center",
              "margin": 20,
              "opacity": 0,
              "padding": 7.5,
              "transform": [
                {
                  "scale": 0.3,
                },
              ],
              "width": 225,
            }
          }
        >
          <Text
            style={
              {
                "fontSize": 30.595932917809698,
                "fontWeight": "bold",
              }
            }
          >
            BACK
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;
